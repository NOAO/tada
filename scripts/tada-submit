#!/bin/bash
# PURPOSE: Submit files to TADA, perhaps with options 
#   Wait for all to complete
#
# EXAMPLE:
#   tada-submit -o _DTCALDAT=2014-09-21 $HOME/TEXTFILE.txt /data/raw/nhs_2014_n14_299403.fits /data/bok/bokrm.20140425.0119.fits
#
# AUTHORS: S.Pothier

cmd=`basename $0`
dir=`dirname $0`

#Absolute path to this script
SCRIPT=$(readlink -f $0)
#Absolute path this script is in
SCRIPTPATH=$(dirname $SCRIPT)
PATH=$SCRIPTPATH:$PATH

LOG=/var/log/tada/submit.log
OPTIONS=""
PROGRESS=0
RESULTS=/tmp/$cmd.$$.results
VERBOSE=0

usage="USAGE: $cmd [options] file [file ...]
OPTIONS:
  -l <inputLog>:: Log contain success/failure of submits. (default=$LOG)
  -o <options>::  Name=Value (multi allowed)
  -p <progress>:: Number of progress updates per second (default=0)
  -r <resultsFile>:: Extracted submit results for matching lines (default=$RESULTS)
  -v <verbosity>:: higher number for more output (default=0)

"


while getopts "hl:o:p:r:v:" opt; do
    #!echo "opt=<$opt>"
    case $opt in
	h)
            echo "$usage"
            exit 1
            ;;
        v)
            VERBOSE=$OPTARG
            ;;
        l)
            LOG=$OPTARG
            ;;
        o)
            OPTIONS="$OPTIONS -o $OPTARG"
            ;;
        p)
            PROGRESS=$OPTARG # how often to report progress
            ;;
        r)
            RESULTS=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;

    esac
done
#echo "OPTIND=$OPTIND"
for (( x=1; x<$OPTIND; x++ )); do shift; done


RAC=1 # Required Argument Count
if [ $# -lt $RAC ]; then
    echo "Not enough non-option arguments. Expect at least $RAC."
    echo >&2 "$usage"
    exit 2
fi


#!echo "LOG=$LOG"
#!echo "OPTIONS=$OPTIONS"
#!echo "PROGRESS=$PROGRESS"
#!echo "VERBOSE=$VERBOSE"
#!echo "Remaining arguments:"
#!for arg do echo '--> '"\`$arg'" ; done



##############################################################################


strs=""
for file; do
    req=`lp -d astro $OPTIONS $file`
    echo "Submit ($req) status: $?"
    id=`echo $req | awk '{ print substr($4,7) }'`
    base=`basename $file`
    strs="$strs $USER/$id/$base"

    echo "Submitted: $id/$base"
done

echo "Waiting for: $strs"
finished-files.sh -r $RESULTS $strs

echo "Results: "
cat $RESULTS


