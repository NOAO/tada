#!/bin/bash
# PURPOSE: Initiate submit of fits file to archive
#   Sets options for use by tada at valley to add to fits header.
#
# EXAMPLE: 
#
# CONSIDERATIONS:
#   It might be better to source the personality file once for each
#   file processed. But that would eliminate time savings from calling
#   postproc with a list of files.

#
# AUTHORS: S. Pothier

function finish {
    echo "EXIT of postproc"
    logger -p notice "Normal exit of: $(basename $0) $*"
}
trap finish EXIT

function abort {
    echo "ABORT of postproc"
}
trap abort ERR SIGINT SIGTERM

#!cmd=`basename $0`
#!dir=`dirname $0`

return_code=0
#Absolute path to this script
SCRIPT=$(readlink -f $0)
#Absolute path this script is in
SCRIPTPATH=$(dirname $SCRIPT)

PATH=$SCRIPTPATH:$PATH

OPTIONS=""
LPOPTIONS=""
TADAOPTS=""
VERBOSE=0
TIMEOUT=30
SUBMITTED=/var/log/tada/postproc.rcvd
filename=$1

usage="USAGE: $cmd [options] file [file ...]
OPTIONS:
  -o <specific option>:: Add option to submit.  Can use multiple times.
     (default=NONE)

  -p <personality>:: Add set of options to submit.  Can use multiple times.
     (default=NONE)

  -t <seconds>:: Seconds to wait for match to show up in manifest 
     (default=$TIMEOUT)

  -v :: Verbose output
     (default=not verbose)
"
#!  -s <filename>:: Write info about what was submitted to this file.
#!     (default=$SUBMITTED)



while getopts "ho:p:s:t:v" opt; do
    #!echo "opt=<$opt>"
    case $opt in
	h)
            echo "$usage"
            exit 1
            ;;
	c)
            CLEAR=1
            ;;
        v)
            VERBOSE=1
            ;;
        o)
	    LPOPTIONS="$LPOPTIONS -o ${OPTARG}"
            ;;
        p)
	    # appends to $TADAOPTS
	    source ${SCRIPTPATH}/${OPTARG}.personality
            ;;
        #!s)
        #!    SUBMITTED=$OPTARG
        #!    ;;
        t)
            TIMEOUT=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;

    esac
done
#echo "OPTIND=$OPTIND"
for (( x=1; x<$OPTIND; x++ )); do shift; done


RAC=1 # Required Argument Count
if [ $# -lt $RAC ]; then
    echo "Not enough non-option arguments. Expect at least $RAC."
    echo >&2 "$usage"
    exit 2
fi


##############################################################################

strs=""
for filename; do
    base=`basename $filename`
    lpcmd="lp -d astro ${LPOPTIONS}  -o _DTACQNAM=$base ${TADAOPTS} ${filename}"
    req=`$lpcmd`
    lpstat=$?
    return_code=$lpstat
    id=`echo $req | awk '{ print substr($4,7) }'`
    ufile=$USER/$id/$base
    strs="$strs $ufile"
    stamp=`date '+%Y.%m.%d_%H.%M'`;
    echo "$stamp $filename $return_code USER=$USER id=$id" >> $SUBMITTED

    if [ $VERBOSE -gt 0 ]; then
	    echo "# Exeucted: $lpcmd"
	    echo "# Submit ($req) status: $lpstat"
	    echo "# Submitted: $ufile"
    fi
done

echo "# Wrote status to $SUBMITTED"

exit $return_code
