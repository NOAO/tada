#!/bin/bash
#
# This CUPS backend allows you to "print to file". 
#
# Modified from:
# http://osdir.com/ml/printing.cups.devel/2004-10/msg00007.html
# which contained snip (c) Kurt Pfeifle, Danka Deutschland GmbH
#
#
# Install a printer like this:
#
# chmod a+x <this.file>
# sudo cp <this.file> /usr/lib/cups/backend/sdpost
# sudo service cups restart
# sudo lpadmin -p astrorepo -v sdpost:/tmp/astro_print.prn -E 
#
# If you print to the new "astrorepo" printer, you will find the files your
# CUPS filtering produced in "/tmp/astro/*.prn".
#

# test for 5 or 6 parameters
FILE=$6 || FILE="-";

LOG=/tmp/sdpost.log; export LOG ;
JOBID=$1 ;
USER=$2 ;
TITLE=$3 ;
COPIES=$4 ;
OPTIONS=$5 ;
PID=$$ ;
echo ${FILE} >> ${LOG} ;
echo ${JOBID} >> ${LOG} ;
echo ${USER} >> ${LOG} ;
echo ${TITLE} >> ${LOG} ;
echo ${COPIES} >> ${LOG} ;
echo ${OPTIONS} >> ${LOG} ;

# if there are no arguments: print the "I'm here" message for cupsd's probing
if [ $# -eq 0 ]; then
echo "direct sdpost \"Unknown\" \"Print any job to file specified in 
device-URI\""
exit 0
fi

# in case of wrong number of arguments: print usage hint
if [ $# -ne 5 -a $# -ne 6 ]; then
echo ""
echo "Usage: sdpost job-id user title copies options [file]"
echo " example for device-URI: 'sdpost:/path/to/targetfile'"
echo "(this writes the printfile to disk at specified path)"
echo ""
echo "Install a printqueue with:\n \
'lpadmin -p <sdpostr-printer-name> -v sdpost:/</path/to/targetfile> -E'"
echo ""
exit 1
fi

# sanitize $TITLE -- remove any spaces, colons and slashes or
# backslashes from filename
TITLE=`echo ${TITLE} | tr [:blank:] _ | tr : _ | tr / _ | tr "\134" _`;
# we should now have a sanitized ${TITLE} to use with less danger of
# screwing things up should we print from a browser or some such....

# get file to which the job is "printed" from device URI, so
# so that you can use this backend multiple times, for various
# "sdpost" printers...
#!TARGETFILE=${DEVICE_URI#sdpost:}

### uncomment&modify the following line if you need the JOBTITLE,
### USERNAME, JOBID, DATE as part of the filename...
#! TARGETFILE=${USER}-${JOBID}-${DEVICE_URI#sdpost:}-${TITLE}
mkdir -p /tmp/astro
TARGETFILE=/tmp/astro/${USER}-${JOBID}-${TITLE}
# but check "accepting" status first...
GREPSTRING="not accepting" ;
if lpstat -a $TARGETFILE | grep "$GREPSTRING" &> /dev/null ; then
echo "ERROR: printer $TARGETFILE not accepting jobs..."
exit 1
fi

# now do the job....
cat $FILE > $TARGETFILE

# just to show you how cupsd logs stuff....
echo "INFO: just a dummy string for the logfile....">&2
echo "ERROR: another dummy string for the logfile....">&2

exit 0
